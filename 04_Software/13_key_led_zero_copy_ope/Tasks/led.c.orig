#include "led.h"
#include <stdint.h>
#include "gpio.h"
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"

extern QueueHandle_t signal_queue;

static void led_overturn()
{
    HAL_GPIO_TogglePin(LED_GPIO, LED_GPIO_PIN);
}
static void led_flash(uint32_t num)
{
    for(uint32_t i = 0; i < num; i++)
    {
        HAL_GPIO_TogglePin(LED_GPIO, LED_GPIO_PIN);
        vTaskDelay(200);
    }
}

void led_task(void *param)
{
    uint8_t key_state = 0;
    while(1)
    {
        if(NULL != signal_queue && pdTRUE == xQueueReceive(signal_queue, &key_state, portMAX_DELAY))
        {

                if(1 == key_state)
                {
                    led_overturn();
                }
                else if(2 == key_state)
                {
                    led_flash(6);
                }
                key_state = 0;
            
        }
    }
}